import { HttpStatus } from '@nestjs/common';

export const ErrorKey = {
  /* Default Error */
  BAD_REQUEST: 'BAD_REQUEST',
  UNAUTHORIZED: 'UNAUTHORIZED',
  FORBIDDEN: 'FORBIDDEN',
  NOT_FOUND: 'NOT_FOUND',
  METHOD_NOT_ALLOWED: 'METHOD_NOT_ALLOWED',
  CONFLICT: 'CONFLICT',
  PRECONDITION_FAILED: 'PRECONDITION_FAILED',
  TOO_MANY_REQUESTS: 'TOO_MANY_REQUESTS',
  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',
  SERVICE_UNAVAILABLE: 'SERVICE_UNAVAILABLE',

  /* Custom Error */
  NOT_FOUND_USER: 'NOT_FOUND_USER',
  NOT_FOUND_EMAIL: 'NOT_FOUND_EMAIL',
  ALREADY_EXISTS_USER: 'ALREADY_EXISTS_USER',
  ALREADY_EXISTS_EMAIL: 'ALREADY_EXISTS_EMAIL',
  NO_MATCH_USER_INFORMATION: 'NO_MATCH_USER_INFORMATION',
  NOT_FOUND_PROFILE: 'NOT_FOUND_PROFILE',
  INVALID_INPUT_VALUE: 'INVALID_INPUT_VALUE',
  LOGIN_SUCCESS: 'LOGIN_SUCCESS',
  VERIFY_TOKEN_SUCCESS: 'VERIFY_TOKEN_SUCCESS',
  EXPIRED_TOKEN: 'EXPIRED_TOKEN',
  NO_EXISTS_UPLOAD_FILE: 'NO_EXISTS_UPLOAD_FILE',
  UNSUPPORTED_FILE_FORMAT: 'UNSUPPORTED_FILE_FORMAT',
  ALREADY_EXISTS_PROFILE_IMAGE: 'ALREADY_EXISTS_PROFILE_IMAGE',
  NO_ROLE_INFORMATION: 'NO_ROLE_INFORMATION',
  FORBIDDEN_ACCESS: 'FORBIDDEN_ACCESS',
  SIZE_OVER: 'SIZE_OVER',
  NOT_FOUND_PROFILE_IMAGE: 'NOT_FOUND_PROFILE_IMAGE',
  SUCCESS_CREATE_USER: 'SUCCESS_CREATE_USER',
  SUCCESS_DELETE_USER: 'SUCCESS_DELETE_USER',
  SUCCESS_GET_USER_ME: 'SUCCESS_GET_USER_ME',
  SUCCESS_UPDATE_USER: 'SUCCESS_UPDATE_USER',
  SUCCESS_CREATE_USER_SECRET: 'SUCCESS_CREATE_USER_SECRET',
  SUCCESS_LOGOUT: 'SUCCESS_LOGOUT',
  SUCCESS_CREATE_PROFILE: 'SUCCESS_CREATE_PROFILE',
  SUCCESS_DELETE_PROFILE: 'SUCCESS_DELETE_PROFILE',
  SUCCESS_GET_PROFILE: 'SUCCESS_GET_PROFILE',
  SUCCESS_UPDATE_PROFILE: 'SUCCESS_UPDATE_PROFILE',
  SUCCESS_UPDATE_USER_SECRET: 'SUCCESS_UPDATE_USER_SECRET',
  SUCCESS_CREATE_SURVEY: 'SUCCESS_CREATE_SURVEY',
  SUCCESS_RESTORE_SURVEY: 'SUCCESS_RESTORE_SURVEY',
  SUCCESS_RESTORE_ALL_SURVEY: 'SUCCESS_RESTORE_ALL_SURVEY',
  NOT_FOUND_SURVEY: 'NOT_FOUND_SURVEY',
  SUCCESS_GET_SURVEY: 'SUCCESS_GET_SURVEY',
  SUCCESS_UPDATE_SURVEY: 'SUCCESS_UPDATE_SURVEY',
  NOT_FOUND_SUBSCRIPTION: 'NOT_FOUND_SUBSCRIPTION',
  UPDATE_ORGANIZATION_SUCCESS: 'UPDATE_ORGANIZATION_SUCCESS',
  NOT_FOUND_PERMISSION: 'NOT_FOUND_PERMISSION',
  SUCCESS_GET_SURVEY_METADATA: 'SUCCESS_GET_SURVEY_METADATA',
  SUCCESS_GET_RECENT_SURVEY: 'SUCCESS_GET_RECENT_SURVEY',
  SUCCESS_GET_SURVEY_DETAIL: 'SUCCESS_GET_SURVEY_DETAIL',
  REFRESH_TOKEN_REQUIRED: 'REFRESH_TOKEN_REQUIRED',
  SUCCESS_REFRESH: 'SUCCESS_REFRESH',
  SUCCESS_GET_SURVEY_LIST: 'SUCCESS_GET_SURVEY_LIST',
  SUCCESS_GET_USER_ACCESS_LIST: 'SUCCESS_GET_USER_ACCESS_LIST',
  NOT_FOUND_USER_ACCESS: 'NOT_FOUND_USER_ACCESS',
  SUCCESS_UPDATE_SURVEY_VISIBILITY: 'SUCCESS_UPDATE_SURVEY_VISIBILITY',
  SUCCESS_DELETE_SURVEY: 'SUCCESS_DELETE_SURVEY',
  SUCCESS_GET_CATEGORY_LIST: 'SUCCESS_GET_CATEGORY_LIST',
  NOT_ENOUGH_PERMISSION: 'NOT_ENOUGH_PERMISSION',
  NO_MATCH_SUBSCRIPTION: 'NO_MATCH_SUBSCRIPTION',
  NOT_FOUND_ORGANIZATION_ROLE: 'NOT_FOUND_ORGANIZATION_ROLE',
  SUCCESS_GET_USER_ORGANIZATIONS: 'SUCCESS_GET_USER_ORGANIZATIONS',
  SUCCESS_UPDATE_USER_ORGANIZATION: 'SUCCESS_UPDATE_USER_ORGANIZATION',
  REQUIRED_QUESTION_AT_LEAST_ONE: 'REQUIRED_QUESTION_AT_LEAST_ONE',
  SUCCESS_CREATE_ANSWER: 'SUCCESS_CREATE_ANSWER',
  SUCCESS_GET_SURVEY_BIN: 'SUCCESS_GET_SURVEY_BIN',
  SUCCESS_UPDATE_SURVEY_STATUS: 'SUCCESS_UPDATE_SURVEY_STATUS',
  SUCCESS_START_ANSWER: 'SUCCESS_START_ANSWER',
  SUCCESS_VALIDATE_FIRST_SURVEY_ANSWER: 'SUCCESS_VALIDATE_FIRST_SURVEY_ANSWER',
  NO_VALIDATE_FIRST_SURVEY_ANSWER: 'NO_VALIDATE_FIRST_SURVEY_ANSWER',
  NOT_FOUND_ANSWER: 'NOT_FOUND_ANSWER',
  EXPIRED_ANSWER: 'EXPIRED_ANSWER',
  NO_VERIFY_ACCESS_TOKEN: 'NO_VERIFY_ACCESS_TOKEN',
  EXPIRED_JWS: 'EXPIRED_JWS',
  REQUIRED_REFRESH_JWS: 'REQUIRED_REFRESH_JWS',
  SUCCESS_INVITE_SUBSCRIPTION: 'SUCCESS_INVITE_SUBSCRIPTION',
  SUCCESS_VERIFY_INVITE_TOKEN: 'SUCCESS_VERIFY_INVITE_TOKEN',
  EXPIRED_INVITATION_TOKEN: 'EXPIRED_INVITATION_TOKEN',
  ALREADY_JOINED_USER: 'ALREADY_JOINED_USER',
  FAIL_DECODE_TOKEN: 'FAIL_DECODE_TOKEN',
  INVALID_TOKEN_LENGTH: 'INVALID_TOKEN_LENGTH',
  FAIL_ENCODE_TOKEN: 'FAIL_ENCODE_TOKEN',
  NOT_ALLOWED_INVITE: 'NOT_ALLOWED_INVITE',
  EXCEEDED_TEAM_INVITE_LIMIT: 'EXCEEDED_TEAM_INVITE_LIMIT',
  SUCCESS_GET_NOTIFICATION: 'SUCCESS_GET_NOTIFICATION',
  SUCCESS_TOGGLE_READ_NOTIFICATION: 'SUCCESS_TOGGLE_READ_NOTIFICATION',
  NOT_FOUND_NOTIFICATION: 'NOT_FOUND_NOTIFICATION',
  SUCCESS_GET_SURVEY_GRAPH: 'SUCCESS_GET_SURVEY_GRAPH',
  NO_INVITE_SELF: 'NO_INVITE_SELF',
  NO_SIGN_USERS: 'NO_SIGN_USERS',
  SUCCESS_GET_ORGANIZATION_ROLES: 'SUCCESS_GET_ORGANIZATION_ROLES',
  EXCEEDED_TEAM_LIMIT: 'EXCEEDED_TEAM_LIMIT',
  NOT_ALLOWED_UPDATE_ORGANIZATION_ROLE: 'NOT_ALLOWED_UPDATE_ORGANIZATION_ROLE',
  SUCCESS_UPDATE_INVITATION_WITH_NOTIFICATION: 'SUCCESS_UPDATE_INVITATION_WITH_NOTIFICATION',
  SUCCESS_UPDATE_ORGANIZATION_ROLE: 'SUCCESS_UPDATE_ORGANIZATION_ROLE',
  NOT_FOUND_LOG_USAGE: 'NOT_FOUND_LOG_USAGE',
  EXCEEDED_RESTORE_LIMIT: 'EXCEEDED_RESTORE_LIMIT',
  SUCCESS_VERIFY_SESSION: 'SUCCESS_VERIFY_SESSION',
  CLOSED_SURVEY: 'CLOSED_SURVEY',
} as const;
export type ErrorKey = (typeof ErrorKey)[keyof typeof ErrorKey];

export const ErrorCode = {
  BAD_REQUEST: HttpStatus.BAD_REQUEST,
  UNAUTHORIZED: HttpStatus.UNAUTHORIZED,
  FORBIDDEN: HttpStatus.FORBIDDEN,
  NOT_FOUND: HttpStatus.NOT_FOUND,
  METHOD_NOT_ALLOWED: HttpStatus.METHOD_NOT_ALLOWED,
  CONFLICT: HttpStatus.CONFLICT,
  PRECONDITION_FAILED: HttpStatus.PRECONDITION_FAILED,
  TOO_MANY_REQUESTS: HttpStatus.TOO_MANY_REQUESTS,
  INTERNAL_SERVER_ERROR: HttpStatus.INTERNAL_SERVER_ERROR,
  SERVICE_UNAVAILABLE: HttpStatus.SERVICE_UNAVAILABLE,

  NOT_FOUND_USER: HttpStatus.NOT_FOUND,
  NOT_FOUND_EMAIL: HttpStatus.NOT_FOUND,
  ALREADY_EXISTS_USER: HttpStatus.CONFLICT,
  ALREADY_EXISTS_EMAIL: HttpStatus.CONFLICT,
  NO_MATCH_USER_INFORMATION: HttpStatus.BAD_REQUEST,
  NOT_FOUND_PROFILE: HttpStatus.NOT_FOUND,
  INVALID_INPUT_VALUE: HttpStatus.BAD_REQUEST,
  LOGIN_SUCCESS: HttpStatus.OK,
  VERIFY_TOKEN_SUCCESS: HttpStatus.OK,
  EXPIRED_TOKEN: HttpStatus.UNAUTHORIZED,
  NO_EXISTS_UPLOAD_FILE: HttpStatus.BAD_REQUEST,
  UNSUPPORTED_FILE_FORMAT: HttpStatus.BAD_REQUEST,
  ALREADY_EXISTS_PROFILE_IMAGE: HttpStatus.BAD_REQUEST,
  NO_ROLE_INFORMATION: HttpStatus.BAD_REQUEST,
  FORBIDDEN_ACCESS: HttpStatus.FORBIDDEN,
  SIZE_OVER: HttpStatus.BAD_REQUEST,
  NOT_FOUND_PROFILE_IMAGE: HttpStatus.NOT_FOUND,
  SUCCESS_CREATE_USER: HttpStatus.CREATED,
  SUCCESS_DELETE_USER: HttpStatus.OK,
  SUCCESS_GET_USER_ME: HttpStatus.OK,
  SUCCESS_UPDATE_USER: HttpStatus.OK,
  SUCCESS_CREATE_USER_SECRET: HttpStatus.CREATED,
  SUCCESS_LOGOUT: HttpStatus.OK,
  SUCCESS_CREATE_PROFILE: HttpStatus.CREATED,
  SUCCESS_DELETE_PROFILE: HttpStatus.OK,
  SUCCESS_GET_PROFILE: HttpStatus.OK,
  SUCCESS_UPDATE_PROFILE: HttpStatus.OK,
  SUCCESS_UPDATE_USER_SECRET: HttpStatus.OK,
  SUCCESS_CREATE_SURVEY: HttpStatus.CREATED,
  SUCCESS_RESTORE_SURVEY: HttpStatus.OK,
  SUCCESS_RESTORE_ALL_SURVEY: HttpStatus.OK,
  NOT_FOUND_SURVEY: HttpStatus.NOT_FOUND,
  SUCCESS_GET_SURVEY: HttpStatus.OK,
  SUCCESS_UPDATE_SURVEY: HttpStatus.OK,
  UPDATE_ORGANIZATION_SUCCESS: HttpStatus.OK,
  NOT_FOUND_PERMISSION: HttpStatus.NOT_FOUND,
  SUCCESS_GET_SURVEY_METADATA: HttpStatus.OK,
  NOT_FOUND_SUBSCRIPTION: HttpStatus.NOT_FOUND,
  SUCCESS_GET_RECENT_SURVEY: HttpStatus.OK,
  SUCCESS_GET_SURVEY_DETAIL: HttpStatus.OK,
  REFRESH_TOKEN_REQUIRED: HttpStatus.UNAUTHORIZED,
  SUCCESS_REFRESH: HttpStatus.OK,
  SUCCESS_GET_SURVEY_LIST: HttpStatus.OK,
  SUCCESS_GET_USER_ACCESS_LIST: HttpStatus.OK,
  NOT_FOUND_USER_ACCESS: HttpStatus.NOT_FOUND,
  SUCCESS_UPDATE_SURVEY_VISIBILITY: HttpStatus.OK,
  SUCCESS_DELETE_SURVEY: HttpStatus.OK,
  SUCCESS_GET_CATEGORY_LIST: HttpStatus.OK,
  NOT_ENOUGH_PERMISSION: HttpStatus.FORBIDDEN,
  NO_MATCH_SUBSCRIPTION: HttpStatus.FORBIDDEN,
  NOT_FOUND_ORGANIZATION_ROLE: HttpStatus.NOT_FOUND,
  SUCCESS_GET_USER_ORGANIZATIONS: HttpStatus.OK,
  SUCCESS_UPDATE_USER_ORGANIZATION: HttpStatus.OK,
  REQUIRED_QUESTION_AT_LEAST_ONE: HttpStatus.BAD_REQUEST,
  SUCCESS_CREATE_ANSWER: HttpStatus.CREATED,
  SUCCESS_GET_SURVEY_BIN: HttpStatus.OK,
  SUCCESS_UPDATE_SURVEY_STATUS: HttpStatus.OK,
  SUCCESS_START_ANSWER: HttpStatus.OK,
  SUCCESS_VALIDATE_FIRST_SURVEY_ANSWER: HttpStatus.OK,
  NO_VALIDATE_FIRST_SURVEY_ANSWER: HttpStatus.BAD_REQUEST,
  NOT_FOUND_ANSWER: HttpStatus.NOT_FOUND,
  EXPIRED_ANSWER: HttpStatus.BAD_REQUEST,
  NO_VERIFY_ACCESS_TOKEN: HttpStatus.BAD_REQUEST,
  EXPIRED_JWS: HttpStatus.BAD_REQUEST,
  REQUIRED_REFRESH_JWS: HttpStatus.BAD_REQUEST,
  SUCCESS_INVITE_SUBSCRIPTION: HttpStatus.OK,
  SUCCESS_VERIFY_INVITE_TOKEN: HttpStatus.OK,
  EXPIRED_INVITATION_TOKEN: HttpStatus.BAD_REQUEST,
  ALREADY_JOINED_USER: HttpStatus.BAD_REQUEST,
  FAIL_DECODE_TOKEN: HttpStatus.BAD_REQUEST,
  INVALID_TOKEN_LENGTH: HttpStatus.BAD_REQUEST,
  FAIL_ENCODE_TOKEN: HttpStatus.BAD_REQUEST,
  NOT_ALLOWED_INVITE: HttpStatus.FORBIDDEN,
  EXCEEDED_TEAM_INVITE_LIMIT: HttpStatus.FORBIDDEN,
  SUCCESS_GET_NOTIFICATION: HttpStatus.OK,
  SUCCESS_TOGGLE_READ_NOTIFICATION: HttpStatus.OK,
  NOT_FOUND_NOTIFICATION: HttpStatus.NOT_FOUND,
  SUCCESS_GET_SURVEY_GRAPH: HttpStatus.OK,
  NO_INVITE_SELF: HttpStatus.BAD_REQUEST,
  NO_SIGN_USERS: HttpStatus.BAD_REQUEST,
  SUCCESS_GET_ORGANIZATION_ROLES: HttpStatus.OK,
  EXCEEDED_TEAM_LIMIT: HttpStatus.BAD_REQUEST,
  NOT_ALLOWED_UPDATE_ORGANIZATION_ROLE: HttpStatus.BAD_REQUEST,
  SUCCESS_UPDATE_INVITATION_WITH_NOTIFICATION: HttpStatus.OK,
  SUCCESS_UPDATE_ORGANIZATION_ROLE: HttpStatus.OK,
  NOT_FOUND_LOG_USAGE: HttpStatus.NOT_FOUND,
  EXCEEDED_RESTORE_LIMIT: HttpStatus.BAD_REQUEST,
  SUCCESS_VERIFY_SESSION: HttpStatus.OK,
  CLOSED_SURVEY: HttpStatus.BAD_REQUEST,
} as const;
export type ErrorCode = (typeof ErrorCode)[keyof typeof ErrorCode];

export const ErrorMessage = {
  BAD_REQUEST: '잘못된 요청입니다.',
  UNAUTHORIZED: '인증되지 않은 요청입니다.',
  FORBIDDEN: '권한이 없는 요청입니다.',
  NOT_FOUND: '존재하지 않는 요청입니다.',
  METHOD_NOT_ALLOWED: '허용되지 않은 요청입니다.',
  CONFLICT: '중복된 요청입니다.',
  PRECONDITION_FAILED: '사전 조건이 충족되지 않은 요청입니다.',
  TOO_MANY_REQUESTS: '요청이 너무 많습니다.',
  INTERNAL_SERVER_ERROR: '서버 오류가 발생했습니다.',
  SERVICE_UNAVAILABLE: '서비스를 사용할 수 없습니다.',

  NOT_FOUND_USER: '존재하지 않는 사용자입니다.',
  NOT_FOUND_EMAIL: '존재하지 않는 이메일입니다.',
  ALREADY_EXISTS_USER: '이미 존재하는 사용자입니다.',
  ALREADY_EXISTS_EMAIL: '이미 존재하는 이메일입니다.',
  NO_MATCH_USER_INFORMATION: '사용자 정보가 일치하지 않습니다.',
  NOT_FOUND_PROFILE: '프로필을 찾지 못했습니다.',
  INVALID_INPUT_VALUE: '입력값이 올바르지 않습니다.',
  LOGIN_SUCCESS: '로그인 성공',
  VERIFY_TOKEN_SUCCESS: '토큰 검증 성공',
  EXPIRED_TOKEN: '토큰이 만료되었습니다.',
  NO_EXISTS_UPLOAD_FILE: '업로드 파일이 존재하지 않습니다.',
  UNSUPPORTED_FILE_FORMAT: '지원하지 않는 파일 형식입니다.',
  ALREADY_EXISTS_PROFILE_IMAGE: '이미 프로필 이미지가 존재합니다.',
  NO_ROLE_INFORMATION: '사용자의 역할 정보가 없습니다.',
  FORBIDDEN_ACCESS: '허용되지 않은 접근입니다.',
  SIZE_OVER: '이미지 크기가 너무 큽니다.',
  NOT_FOUND_PROFILE_IMAGE: '프로필 이미지를 찾을 수 없습니다.',
  SUCCESS_CREATE_USER: '사용자 생성 성공',
  SUCCESS_DELETE_USER: '사용자 삭제 성공',
  SUCCESS_GET_USER_ME: '사용자 정보 조회 성공',
  SUCCESS_UPDATE_USER: '사용자 정보 수정 성공',
  SUCCESS_CREATE_USER_SECRET: '비밀번호 생성 성공',
  SUCCESS_LOGOUT: '로그아웃 성공',
  SUCCESS_CREATE_PROFILE: '프로필 생성 성공',
  SUCCESS_DELETE_PROFILE: '프로필 삭제 성공',
  SUCCESS_GET_PROFILE: '프로필 조회 성공',
  SUCCESS_UPDATE_PROFILE: '프로필 수정 성공',
  SUCCESS_UPDATE_USER_SECRET: '비밀번호 변경 성공',
  SUCCESS_CREATE_SURVEY: '설문 생성 성공',
  SUCCESS_RESTORE_SURVEY: '설문 복구 성공',
  SUCCESS_RESTORE_ALL_SURVEY: '모든 설문 복구 성공',
  NOT_FOUND_SURVEY: '요청하신 설문이 존재하지 않거나 접근할 수 없는 상태입니다.',
  SUCCESS_GET_SURVEY: '설문 조회 성공',
  SUCCESS_UPDATE_SURVEY: '설문 수정 성공',
  UPDATE_ORGANIZATION_SUCCESS: '조직 정보 수정 성공',
  NOT_FOUND_PERMISSION: '권한을 찾을 수 없습니다.',
  SUCCESS_GET_SURVEY_METADATA: '설문 메타데이터 조회 성공',
  NOT_FOUND_SUBSCRIPTION: '구독 정보를 찾을 수 없습니다.',
  SUCCESS_GET_RECENT_SURVEY: '최근 생성된 설문 조회 성공',
  SUCCESS_GET_SURVEY_DETAIL: '설문 상세 조회 성공',
  REFRESH_TOKEN_REQUIRED: '리프레시 토큰이 필요합니다.',
  SUCCESS_REFRESH: '리프레시 토큰 발급 성공',
  SUCCESS_GET_SURVEY_LIST: '설문 목록 조회 성공',
  SUCCESS_GET_USER_ACCESS_LIST: '사용자 접속 기록 조회 성공',
  NOT_FOUND_USER_ACCESS: '사용자 접속 기록을 찾을 수 없습니다.',
  SUCCESS_UPDATE_SURVEY_VISIBILITY: '설문 공개 여부 변경 성공',
  SUCCESS_DELETE_SURVEY: '설문 삭제 성공',
  SUCCESS_GET_CATEGORY_LIST: '카테고리 목록 조회 성공',
  NOT_ENOUGH_PERMISSION: '권한이 부족합니다.',
  NO_MATCH_SUBSCRIPTION: '구독 정보가 일치하지 않습니다.',
  NOT_FOUND_ORGANIZATION_ROLE: '존재하지 않는 조직 역할입니다.',
  SUCCESS_GET_USER_ORGANIZATIONS: '사용자 조직 조회 성공',
  SUCCESS_UPDATE_USER_ORGANIZATION: '사용자 조직 수정 성공',
  REQUIRED_QUESTION_AT_LEAST_ONE: '질문은 최소 1개 이상 입력해야 합니다.',
  SUCCESS_CREATE_ANSWER: '답변 생성 성공',
  SUCCESS_GET_SURVEY_BIN: '삭제된 설문 조회 성공',
  SUCCESS_UPDATE_SURVEY_STATUS: '설문 상태 변경 성공',
  SUCCESS_START_ANSWER: '설문 답변 시작 성공',
  SUCCESS_VALIDATE_FIRST_SURVEY_ANSWER: '설문 답변 첫 번째 질문 유효성 검사 성공',
  NO_VALIDATE_FIRST_SURVEY_ANSWER: '설문 답변 첫 번째 질문 유효성 검사 실패',
  NOT_FOUND_ANSWER: '답변을 찾을 수 없습니다.',
  EXPIRED_ANSWER: '답변이 만료되었습니다. 참여하시려면 다시 시작해주세요.',
  NO_VERIFY_ACCESS_TOKEN: '인증 토큰이 유효하지 않습니다.',
  EXPIRED_JWS: '인증 토큰이 만료되었습니다.',
  REQUIRED_REFRESH_JWS: '인증 토큰이 필요합니다.',
  SUCCESS_INVITE_SUBSCRIPTION: '초대 메일 발송 성공',
  SUCCESS_VERIFY_INVITE_TOKEN: '초대 토큰 검증 성공',
  EXPIRED_INVITATION_TOKEN: '초대 토큰이 만료되었습니다.',
  ALREADY_JOINED_USER: '이미 조직에 속한 사용자입니다.',
  FAIL_DECODE_TOKEN: '토큰 복호화에 실패했습니다. 잘못된 토큰이거나 만료되었습니다.',
  INVALID_TOKEN_LENGTH: '토큰 길이가 비정상입니다.',
  FAIL_ENCODE_TOKEN: '토큰 암호화에 실패했습니다.',
  NOT_ALLOWED_INVITE: '초대 권한이 없습니다.',
  EXCEEDED_TEAM_INVITE_LIMIT: '초대 가능한 인원을 초과했습니다.',
  SUCCESS_GET_NOTIFICATION: '알림 조회 성공',
  SUCCESS_TOGGLE_READ_NOTIFICATION: '알림 읽음 상태 변경 성공',
  NOT_FOUND_NOTIFICATION: '알림을 찾을 수 없습니다.',
  SUCCESS_GET_SURVEY_GRAPH: '설문 그래프 조회 성공',
  NO_INVITE_SELF: '자기 자신을 초대할 수 없습니다.',
  NO_SIGN_USERS: '아직 회원가입하지 않은 사용자가 있습니다.',
  SUCCESS_GET_ORGANIZATION_ROLES: '조직 역할 목록 조회 성공',
  EXCEEDED_TEAM_LIMIT: '조직 인원을 초과했습니다.',
  NOT_ALLOWED_UPDATE_ORGANIZATION_ROLE: '조직 역할 정보를 수정할 수 없습니다.',
  SUCCESS_UPDATE_INVITATION_WITH_NOTIFICATION: '초대 승락 여부 수정 성공',
  SUCCESS_UPDATE_ORGANIZATION_ROLE: '조직 역할 수정 성공',
  NOT_FOUND_LOG_USAGE: '사용 기록을 찾을 수 없습니다.',
  EXCEEDED_RESTORE_LIMIT: '복구 가능한 설문 개수를 초과했습니다.',
  SUCCESS_VERIFY_SESSION: '세션 검증 성공',
  CLOSED_SURVEY: '이미 마감된 설문입니다.',
} as const;
export type ErrorMessage = (typeof ErrorMessage)[keyof typeof ErrorMessage];

type ErrorReturn = {
  message: string;
  status: HttpStatus;
  errorCode: ErrorCode;
};

export function getErrorMessage(errorKey: keyof typeof ErrorKey): ErrorReturn {
  const message = ErrorMessage[errorKey] ?? '알 수 없는 오류가 발생했습니다.';
  const status = ErrorCode[errorKey] ?? ErrorCode.INTERNAL_SERVER_ERROR;
  const errorCode = ErrorCode[errorKey] ?? ErrorCode.INTERNAL_SERVER_ERROR;

  return { message, status, errorCode };
}
